#!/bin/sh
set -e

echo "üîç V√©rification du fichier .env..."

# --- 1Ô∏è‚É£ Cr√©er .env si absent ---
if [ ! -f /var/www/html/.env ]; then
  cp /var/www/html/.env.example /var/www/html/.env
  echo "‚úÖ .env cr√©√© depuis .env.example"
fi

# --- 2Ô∏è‚É£ G√©n√©rer la cl√© Laravel ---
if ! grep -q "APP_KEY=" /var/www/html/.env || [ -z "$(grep 'APP_KEY=' /var/www/html/.env | cut -d '=' -f2)" ]; then
  echo "üîë G√©n√©ration de la cl√© d‚Äôapplication..."
  php artisan key:generate --force
fi

# --- 3Ô∏è‚É£ Attendre que la base soit pr√™te ---
echo "‚è≥ Attente de la base de donn√©es..."
until php -r "try {
    new PDO(getenv('DB_CONNECTION').':host='.getenv('DB_HOST').';port='.getenv('DB_PORT').';dbname='.getenv('DB_DATABASE'), getenv('DB_USERNAME'), getenv('DB_PASSWORD'));
    echo '‚úÖ DB OK';
} catch (Exception \$e) {
    echo '‚è≥ En attente...';
    exit(1);
}"; do
  sleep 2
done

# --- 4Ô∏è‚É£ Ex√©cuter les migrations ---
echo "‚öôÔ∏è Ex√©cution des migrations..."
if [ ! -f /var/www/html/storage/initialized.flag ]; then
  echo "üÜï Premi√®re ex√©cution : r√©initialisation compl√®te de la base..."
  php artisan migrate:fresh --force
  php artisan db:seed --force
  touch /var/www/html/storage/initialized.flag
else
  echo "üîÅ Migration incr√©mentale..."
  php artisan migrate --force || true
fi

# --- 5Ô∏è‚É£ V√©rification du build Vite ---
echo "‚öôÔ∏è V√©rification du build Vite..."
if [ -f /var/www/html/public/build/manifest.json ]; then
  echo "‚úÖ Build Vite d√©j√† pr√©sent."
else
  echo "‚ö†Ô∏è Aucun build d√©tect√© dans /public/build/"
  echo "   ‚Üí V√©rifie que ton Dockerfile copie bien :"
  echo "     COPY --from=node_build /app/public/build /var/www/html/public/build"
fi

# --- 6Ô∏è‚É£ Cache Laravel ---
echo "üß© Mise en cache Laravel..."
php artisan optimize:clear
php artisan config:cache
php artisan route:cache || true
php artisan view:cache || true

# --- 6Ô∏è‚É£ bis : forcer le HTTPS en production ---
if [ "$APP_ENV" = "production" ]; then
  php artisan config:clear
  php artisan route:clear
  php artisan optimize
  php artisan storage:link || true
fi

# --- 7Ô∏è‚É£ Fixer les permissions ---
echo "üõ†Ô∏è Fixation des permissions..."
chown -R www-data:www-data /var/www/html
chmod -R 755 /var/www/html/storage /var/www/html/bootstrap/cache

# --- 8Ô∏è‚É£ D√©marrer Laravel ---
RENDER_PORT=${PORT:-10000}

echo "üöÄ D√©marrage du serveur Laravel sur 0.0.0.0:${RENDER_PORT}"

exec php artisan serve --host=0.0.0.0 --port="${RENDER_PORT}"
